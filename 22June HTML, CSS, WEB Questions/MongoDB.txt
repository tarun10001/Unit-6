
1. What are SQL Databases? What are some companies that use Mongo, what type of applications are these?
A database in SQL Server is made up of a collection of tables that stores a specific set of structured data. A table contains a collection of rows, also referred to as records or tuples, and columns, also referred to as attributes.
Over the years, MongoDB has become a popular choice of a highly scalable database and it is currently being used as the backend data store of many well-known organizations like IBM, Twitter, Zendesk, Forbes, Facebook, Google, and a gazillion others.


2. What are NoSQL Databases? What are some companies that use Mongo, what type of applications are these?
NoSQL databases store data in documents rather than relational tables. Accordingly, we classify them as "not only SQL" and subdivide them by a variety of flexible data models. Types of NoSQL databases include pure document databases, key-value stores, wide-column databases, and graph databases.
A few of the companies that use NoSQL are: Amazon. Adobe. Capgemini.


3. What is the difference between SQL and NoSQL databases?
SQL databases are vertically scalable, while NoSQL databases are horizontally scalable. SQL databases are table-based, while NoSQL databases are document, key-value, graph, or wide-column stores. SQL databases are better for multi-row transactions,
 while NoSQL is better for unstructured data like documents or JSON.


4. What are some features of MongoDB?
a) Ad-hoc queries for optimized, real-time analytics.
b) Indexing appropriately for better query executions.
c) Replication for better data availability and stability.
d) Load balancing.
e) Sharding.


5. What are aggregate queries?
An aggregate query is a method of deriving group and subgroup data by analysis of a set of individual data entries. The term is frequently used by database developers and database administrators.


6. What are pipelines in aggregation?
An aggregation pipeline consists of one or more stages that process documents: Each stage performs an operation on the input documents. For example, a stage can filter documents, group documents, and calculate values. 
The documents that are output from a stage are passed to the next stage.


7. How do you do aggregate queries?
a.Compute the average value from a numeric sequence
b.Count the number of elements in a sequence
c.Count the number of records (entries) in a column or table
d.Find the maximum value in a numeric sequence
e.Find the minimum value in a numeric sequence
f.Compute the sum of values in a numeric sequence
g.Compute the standard deviation of a numeric sequence


8.How can you group by a particular value in MongoDB?
We can group by single as well as multiple field from the collection, we can use $group operator in MongoDB to group fields from the collection and returns the new document as result.
We are using $avg, $sum, $max, $min, $push, $last, $first and $addToSet operator with group by in MongoDB.


9. How can you paginate on MongoDB?
Using skip and limit method.
Using the find and limit method.
Pagination using slice.
Pagination by creating an index on a specified field.
Pagination by using the sort method.
Pagination by using the range queries.


10. How can you sort in MongoDB?
To sort documents in MongoDB, you need to use sort() method. The method accepts a document containing a list of fields along with their sorting order. To specify sorting order 1 and -1 are used. 
1 is used for ascending order while -1 is used for descending order.


11. What is indexing in MongoDB? Why do we need to use indexing? What are pros and cons for indexing?
Indexing is a data structure technique which allows you to quickly retrieve records from a database file. 
MongoDB uses indexing in order to make the query processing more efficient. If there is no indexing, then the MongoDB must scan every document in the collection and retrieve only those documents that match the query.

Pros and Cons of Indexes
To find rows matching a WHERE clause in a query.
To eliminate rows from consideration.
To retrieve rows from other tables when JOINS are part of a query and where the columns being searched are of similar type and size.
To find min and max values in a column.
To sort or group results.


12. Write the query for indexing a field in MongoDB?

13. What is the improvement in performance in MongoDB?
Other ways to improve MongoDB performance after identifying your major query patterns include: Storing the results of frequent sub-queries on documents to reduce read load. Making sure that you have indices on any fields you regularly query against.
Looking at your logs to identify slow queries, then check your indices.


14. What is the data structure used for indexing?
Data structures for indexing
B-trees are the most commonly used data structures for indexes as they are time-efficient for lookups, deletions, and insertions. All these operations can be done in logarithmic time. 
Data that is stored inside of a B-tree can be sorted.


15. Are values sorted in indexes?
Indexes in MongoDB are stored in a B-tree structure, where each index entry points to a specific location on-disk. Using a B-tree structure also means that a MongoDB index is stored in a sorted order, always traversed in-order, and 
is cheap for MongoDB to fetch a series of documents in a sorted order via indexes.


16. What are Replica Sets in MongoDB?
A replica set in MongoDB is a group of mongodb processes that maintain the same data set. Replica sets provide redundancy and high availability, 
and are the basis for all production deployments. This section introduces replication in MongoDB as well as the components and architecture of replica sets.


17. Explain the structure of ObjectID in MongoDB.
An ObjectId in MongoDB is a 12-byte BSON type. In the 12-byte structure, the first 4 bytes of the ObjectId represent the time in seconds since the UNIX epoch. The next 3 bytes of the ObjectId represent the machine identifier. The next 2 bytes of the ObjectId represent the process ID.


18. By default, which index is created by MongoDB for every collection?
MongoDB creates a unique index on the _id field during the creation of a collection. The _id index prevents clients from inserting two documents with the same value for the _id field.


19. In which format MongoDB represents document structure?
In MongoDB, data is stored as documents. These documents are stored in MongoDB in JSON (JavaScript Object Notation) format.


20. In which format MongoDB represents document structure?
In MongoDB, data is stored as documents. These documents are stored in MongoDB in JSON (JavaScript Object Notation) format.


21. What is the limitation of a document in MongoDB?
The maximum BSON document size is 16 megabytes. The maximum document size helps ensure that a single document cannot use excessive amount of RAM or, during transmission, excessive amount of bandwidth.
To store documents larger than the maximum size, MongoDB provides the GridFS API.


22. What is the difference between MongoDB and Redis database?
MongoDB is a document-oriented, disk-based database optimized for operational simplicity, schema-free design and very large data volumes. 
Redis is an in-memory, persistent data structure store that enables developers to perform common operations with minimal complexity and maximum performance.


23. How can you add references between multiple collections?
For performing MongoDB Join two collections, you must use the $lookup operator. It is defined as a stage that executes a left outer join with another collection and aids in filtering data from joined documents.


24. What are lookup in aggregation for MongoDB?
The $lookup operator is an aggregation operator or an aggregation stage, which is used to join a document from one collection to a document of another collection of the same database based on some queries. 
Both the collections should belong to the same databases.


25. What are graph lookups?
graphLookup allows us to recursively traverse a graph structure represented in documents. $ graphLookup has the following form. Let's go over the parameters. Since it's a lookup operation, we specify the collection where we want to perform the graph search using the from field.


26. What is the alternative for lookup in SQL?
A better solution is to replace the lookup transformation editor and the corresponding OLE DB Command transformations and instead use the MERGE statement (requires SQL Server 2008) in an Execute SQL task. Read about it at Using MERGE in Integration Services Packages.


27. How can you do one to many relation in MongoDB?
One to many relationships with mongoDB can easily be mapped using mongoose. Although MongoDB isnâ€™t a relational database like PostgreSQL, you can still create relationships that are either embedded or referenced. Referenced relationships are more akin to the relations using in relational databases.


28. What is MongoDB ?
MongoDB is an open-source NoSQL database written in C++ language. It uses JSON-like documents with optional schemas.
It provides easy scalability and is a cross-platform, document-oriented database.
MongoDB works on the concept of Collection and Document.
It combines the ability to scale out with features such as secondary indexes, range queries, sorting, aggregations, and geospatial indexes.
MongoDB is developed by MongoDB Inc. and licensed under the Server Side Public License (SSPL).
